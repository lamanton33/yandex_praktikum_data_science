
....
<font color='green'> <b><u>КОММЕНТАРИЙ РЕВЬЮЕРА</u></b>
....

Юрий, доброго дня! рад приветствовать тебя) Меня зовут Николай Шавлюго.
И на этом этапе твоего движения к новой профессии от меня будут
комментарии по написанному коду. Чтобы меньше ``мусорить эфир'' и чтобы
максимально наглядно отделяться от основного кода, есть предложение
условиться в некоторых обозначениях: ТАКОЙ ШРИФТ - всегда начало
комментария такой шрифт - комментарии о том, что всё ОК такой шрифт -
комментарии о том, что всё ОК по результату, однако есть на что обратить
внимание в плане применения техник, или есть способы сделать более
короткий или быстрый код такой шрифт - комментарии о том, что есть
критичный момент, влияющий на бизнес-результат проекта. Моей целью
является не ``уличить'' в не знании, а просто высказать сверху твоих
знаний - свой опыт, что бы ты мог использовать его для своего
дальнейшего успеха) И очень здорово будет, если тебе удастся задавать
вопросы, да и вообще - всячески доставать меня, если я по каким-то
причинам не приму проект:) При этом, из своего опыта скажу, хорошо и
важно, когда переписка ревьюера и студента - сохраняется на следующие
проекты и даже на будущую практическую деятельность. Я сразу же начал
общаться на ты:) но если это не очень удобно, то дай знать)) В ПУТЬ!

Содержание[.tocSkip]####

[.toc-item-num]##1  ##Аналитика

[.toc-item-num]##2  ##Строим гипотезы

[.toc-item-num]##3  ##Чек-лист проверки

== Спрос на рейсы авиакомпании

Вы аналитик российской авиакомпании F9, выполняющей внутренние
пассажирские перевозки. Важно понять предпочтения пользователей,
покупающих билеты на разные направления.

Вам предстоит изучить базу данных и проанализировать спрос пассажиров на
рейсы в города, где проходят крупнейшие культурные фестивали.

У вас есть файлы с результатами запросов из предыдущих заданий.

*query_1.csv* — результат первого запроса. В нём содержится такая
информация:

* _model_ — **модель самолета;
* _flights_amount_ — количество рейсов для каждой модели самолетов
_model_ в сентябре 2018 года.

*query_3.csv* — результат третьего запроса. В нём содержится такая
информация:

* _city_ — город;
* _average_flights_ — среднее количество рейсов, прибывающих в город
(_city_) за день в сентябре 2018 года.

Для этих двух наборов данных нужно:

* импортировать файлы;
* изучить данные в них;
* проверить типы данных на корректность;
* выбрать топ-10 городов по количеству рейсов;
* построить графики: модели самолётов и количество рейсов, города и
количество рейсов, топ-10 городов и количество рейсов;
* сделать выводы по каждому из графиков, пояснить результат.

== Аналитика


+*In[1]:*+
[source, ipython3]
----
#Импорт библиотек
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import math
from scipy import stats as st
----


+*In[2]:*+
[source, ipython3]
----

#Загрузим таблицы в проект
query_1 = pd.read_csv('/datasets/query_1.csv')
query_3 = pd.read_csv('/datasets/query_3.csv')
query_last = pd.read_csv('/datasets/query_last.csv')
----

....
<font color='green'> <b><u>КОММЕНТАРИЙ РЕВЬЮЕРА</u></b>
....

ОК, данные на базе)


+*In[3]:*+
[source, ipython3]
----
#Посмотрим на наши таблицы
display(query_1)
display(query_3)
display(query_last)
----


+*Out[3]:*+
----
[cols=",,",options="header",]
|===
| |model |flights_amount
|0 |Airbus A319-100 |607
|1 |Airbus A321-200 |960
|2 |Boeing 737-300 |630
|3 |Boeing 767-300 |600
|4 |Boeing 777-300 |300
|5 |Bombardier CRJ-200 |4446
|6 |Cessna 208 Caravan |4557
|7 |Sukhoi SuperJet-100 |4185
|===

[cols=",,",options="header",]
|===
| |city |average_flights
|0 |Абакан |3.870968
|1 |Анадырь |1.000000
|2 |Анапа |2.161290
|3 |Архангельск |5.354839
|4 |Астрахань |2.451613
|... |... |...
|96 |Чита |1.580645
|97 |Элиста |4.870968
|98 |Южно-Сахалинск |4.290323
|99 |Якутск |2.741935
|100 |Ярославль |1.322581
|===

101 rows × 2 columns

[cols=",,,,",options="header",]
|===
| |week_number |ticket_amount |festival_week |festival_name
|0 |30 |43568 |30.0 |Park Live
|1 |31 |51034 |31.0 |Пикник Афиши
|2 |32 |51675 |NaN |NaN
|3 |33 |51378 |NaN |NaN
|4 |34 |51492 |NaN |NaN
|5 |35 |51360 |NaN |NaN
|6 |36 |51386 |36.0 |Видфест
|7 |37 |51670 |NaN |NaN
|8 |38 |51518 |NaN |NaN
|9 |39 |51623 |NaN |NaN
|===
----


+*In[4]:*+
[source, ipython3]
----
#Изучим таблицы и их типы данных
display(query_1.info())
display(query_3.info())
display(query_last.info())
----


+*Out[4]:*+
----
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 8 entries, 0 to 7
Data columns (total 2 columns):
model             8 non-null object
flights_amount    8 non-null int64
dtypes: int64(1), object(1)
memory usage: 256.0+ bytes
None
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 101 entries, 0 to 100
Data columns (total 2 columns):
city               101 non-null object
average_flights    101 non-null float64
dtypes: float64(1), object(1)
memory usage: 1.7+ KB
None
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10 entries, 0 to 9
Data columns (total 4 columns):
week_number      10 non-null int64
ticket_amount    10 non-null int64
festival_week    3 non-null float64
festival_name    3 non-null object
dtypes: float64(1), int64(2), object(1)
memory usage: 448.0+ bytes
None----


+*In[5]:*+
[source, ipython3]
----
#Отрисуем график с помощью seaborn: топ 10 городов по кол-ву рейсов. выведем с помощью head только 10 городов
plt.figure(figsize=(10,6))
sns.barplot(x='average_flights',
            y='city',
            data=query_3.sort_values(by='average_flights', ascending=False).nlargest(columns=['average_flights'], n=10))
plt.title('Топ-10 городов по количеству рейсов')
plt.xlabel('Среднее количество рейсов')
plt.ylabel('Город');
----


+*Out[5]:*+
----
![png](output_11_0.png)
----

Вывод: Больше всего перелетов в Москву и в Санкт-Петербург


+*In[6]:*+
[source, ipython3]
----
plt.figure(figsize=(10,6))
sns.barplot(x='flights_amount',
            y='model',
            data=query_1.sort_values(by='flights_amount', ascending=False))
plt.title('Модели самолетов и их количество рейсов')
plt.xlabel('Количество рейсов')
plt.ylabel('Модель самолета');
----


+*Out[6]:*+
----
![png](output_13_0.png)
----

Вывод:Больше всего полетов у небольших самолетов таких как cessna,
bombardied, sukhoi


+*In[7]:*+
[source, ipython3]
----
plt.figure(figsize=(10,20))
sns.barplot(x='average_flights',
            y='city',
            data=query_3.sort_values(by='average_flights', ascending=False))
plt.title('Список всех городов с количеством рейсов')
plt.xlabel('Количество рейсов')
plt.ylabel('Город');
----


+*Out[7]:*+
----
![png](output_15_0.png)
----

Как можно видеть из наших графиков, больше всего приходится авиарейсов
на большие города (многомиллионики).

Топ-3 городов с наибольшим количеством авиарейсов:

Москва, Санкт-Петербург, Новосибирск. Топ-3 городов с наименьшим
количеством авиарейсов:

Нефтеюганск, Нягань, Комсомольск-на-Амуре Чаще всего летают самолеты
малой авиации :

Cessna Bombardier Sukhoi SuperJet На последнем месте по количеству
рейсов Boeing 777-300

....
<font color='green'> <b><u>КОММЕНТАРИЙ РЕВЬЮЕРА</u></b>
....

ОК, всё по теме и в точку)

== Строим гипотезы

Гипотезы:

H0: Средний спрос на билеты во время фестивалей не отличается от
среднего спроса на билеты в обычное время H1: Средний спрос на билеты во
время фестивалей отличается от среднего спроса на билеты в обычное время
Нам надо проверить равенство средних в выборке количества билетов в
неделю, когда есть фестивали и когда их нет. Используем для этого t-test
Стьюдента.


+*In[8]:*+
[source, ipython3]
----
sample1 = query_last.loc[query_last['festival_week'].isna(), 'ticket_amount']
sample2 = query_last.loc[~query_last['festival_week'].isna(), 'ticket_amount']

assert (sample1.shape[0] + sample2.shape[0]) == query_last.shape[0]
----


+*In[9]:*+
[source, ipython3]
----
res = st.ttest_ind(sample1, sample2, equal_var=True)
res.pvalue
----


+*Out[9]:*+
----0.09688869045922928----

В результате мы получили pvalue >0.05, из-за этого мы не можем сказать
что разница зависит от времени проведения фестивалей

....
<font color='green'> <b><u>КОММЕНТАРИЙ РЕВЬЮЕРА</u></b>
....

Юрий, хорошо справился с темой) Понятный графический и аналитический
анализ. Выводы, действительно, кажутся во многом очевидные. И тем
приятнее видеть их подтверждение в своей работе. Интересно было бы ещё
глянуть миллионники - отдельно, а остальная Россия - отдельно….

По гипотезам - да, это важная тема. Её сейчас, кажется, отменили как
обязательную на этом спринте. У нас данных совсем мало 7 и 3 строк в
группах сравнения. И тогда вопрос: на сколько можно доверять
статистическим выводам? +
Дело в том, что данная функция сравнения групп = st.ttest_ind -
справедлива (читаем так: последующему выводу можно доверять) только в
том случае, когда данные в подгруппах распределены нормально (и данных
должно быть ну более 20-30 хотя бы для каждой группы). Если данные - не
нормальные (или их мало как в нашем случае),то правильнее использовать
метод непараметрической статистики - фукнцию mannwhitneyu (она как раз
используетСЯ, когда данных мало). Какие последствия от неправильного
использования методов сравнения двух групп? Почему важно понимать
нормальность/ненормльность сравниваемых групп? А потому, что Можно
сделать ложные выводы. А значит неверные управленческие решения. Это
легко увидеть это на медицинском примере: ведь принятие решения о выводе
лекарства на рынок (нового метода лечения) принимают именно используя
эти техники, изучая две группы пациентов. И вот, скажем, метод расчёта
показал, что гипотеза не подтвердилась - т.е. средние значени давления
(допустим лекарство для снижения давления) в группах разные, т.е.
лекарство реально помагает людям. И решили начать запуск лекарства на
рынок. Но, т.к. использовали не тот метод анализа, вывод оказался
ложным:((( т.е. не помогает оно на самом деле….

Это я к тому, что вопрос достаточно серьёзный, по поводу использования
техник сравнения групп между собой и принятия решения о разности между
группами. И если предстоит занимтаься эти вопросом в Вашей деятельности
в будущем, то лучше глубже изучить этот вопрос, чтобы на практике быть
настоящим гуру с точки зрения статистических расчётов. Ведь всё решает
аналитик:) А значит и ответственность тоже берёт на себя)

ВОт, например, если использовать маннауитни в этой задаче, то выводы
могут быть иными. Например, там критерий может показать, что
статистически будут основания отвергнуть гипотезу. Т.е. спрос отличается
в периоды проведения и не проведения фестивалей и управленческие выводы
- уже иные могут быть. (надо ДВУСТОРОННИЙ криетрий использовать,
параметр alternative=`two-sided')

Если говорить о нашей задаче, то, скорее всего, для бизнеса тут более
провильно будет ответить так: данных мало, что быть уверенным в выодах
на 100%, но есть подозрения, что спрос отличается в изучаемые периоды и
дополниетльный сбор данных сможет это подтвердить.

В целом, по спринту ОК) УСПЕШНОГО ДАЛЬНЕЙШЕГО ОБУЧЕНИЯ.

== Чек-лист проверки

* ☒ Jupyter Notebook открыт
* ☒ Весь код выполняется без ошибок
* ☒ Ячейки с кодом расположены в порядке исполнения
* ☒ Файлы изучены
* ☒ Типы данных проверены на корректность
* ☒ Выбран топ-10 городов по количеству рейсов
* ☒ Построен график «Модели самолётов и количество рейсов»
* ☒ Построен график «Города и количество рейсов»
* ☒ Построен график «Топ-10 городов и количество рейсов»
* ☒ На каждом этапе написаны выводы
* ☒ Написан общий вывод


+*In[ ]:*+
[source, ipython3]
----

----
